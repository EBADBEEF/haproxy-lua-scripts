global
  # levels: emerg alert crit err warning notice info debug
  log stdout format raw daemon alert

  # Note: To load modules inside of lua, set environment variables LUA_PATH and
  # LUA_CPATH, or use "lua-prepend-path <path> path" "lua-prepend-path <path>
  # cpath"

  # Run concurrently per thread instead of having a global lua lock
  lua-load-per-thread socks5.lua

  # By default any logs in a lua module go to any attached logger and also to
  # stderr. Change the settings to only log to stderr if no logger is
  # attached. See
  # https://docs.haproxy.org/2.8/configuration.html#3.2-tune.lua.log.loggers
  tune.lua.log.loggers on
  tune.lua.log.stderr auto

listen socks
  bind 127.0.0.1:1080
  mode tcp

  # set some timeouts (could be set in default section)
  timeout connect 10s
  timeout server 1m
  timeout client 1m

  # A "content" action triggers on a new session (see
  # https://docs.haproxy.org/2.8/configuration.html#4.2-tcp-request%20content).
  # The name of the action that is registered in socks5.lua is "socks5".
  tcp-request content lua.socks5

  # print out log level "notice" for this listener
  log stdout format raw daemon notice

  # The lua script has 2 seconds to return before the connection times out.
  tcp-request inspect-delay 2s

  # We set the destination address and destination port based on variables set
  # inside the lua script
  tcp-request content set-dst var(txn.dst)
  tcp-request content set-dst-port var(txn.port)

  # Use special address 0.0.0.0:0 to rewrite destination address in a tcp
  # request (see haproxy "tcp-request connection" docs,
  # https://docs.haproxy.org/2.8/configuration.html#http-request%20set-dst)
  #
  # It does not seem to be necessary to make a separate ipv4 and ipv6 server
  # (at least in haproxy v2.8)
  server s 0.0.0.0:0
